name: kthcloud-ci

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_journalDBMicro
          MYSQL_USER: journalUser
          MYSQL_PASSWORD: 1234
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 21 for Maven build
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Step 3: Wait for MySQL to be ready
      - name: Wait for MySQL to be ready
        run: sleep 20

      # Step 4: Build the project with Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 5: Run Tests
      - name: Run Tests
        run: mvn test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/test_journalDBMicro
          SPRING_DATASOURCE_USERNAME: journalUser
          SPRING_DATASOURCE_PASSWORD: 1234

  docker:
    runs-on: ubuntu-latest
    needs: test  # This ensures the docker job runs only if the test job passes

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 21 for Maven build (if needed for Docker build)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Step 3: Build the project with Maven again
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 4: Login to Docker Registry
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cloud.cbh.kth.se
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_TAG }}
